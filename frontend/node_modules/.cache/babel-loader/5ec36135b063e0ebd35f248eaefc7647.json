{"ast":null,"code":"var _jsxFileName = \"/home/rudra/Documents/backendforget/frontend/src/components/Login.js\";\n// ** create-user.component.js ** //\n//import React from \"react\";\nimport axios from \"axios\";\nimport NavBar from \"./NavBar\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { json } from \"body-parser\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport React, { useState, useEffect, Fragment, useHistory } from \"react\";\nimport \"./Form.scss\";\n\nconst Login = () => {\n  const intialValues = {\n    email: \"\",\n    password: \"\"\n  };\n  const [formValues, setFormValues] = useState(intialValues);\n  const [formErrors, setFormErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false); // let history = useHistory();\n\n  const submit = () => {\n    console.log(formValues);\n  }; //input change handler\n\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n  }; //form submission handler\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.post(\"/api/auth\", formValues).then(res => {\n      //console.log(res.data.id);\n      localStorage.setItem(\"login\", JSON.stringify(res));\n      localStorage.setItem(\"role\", res.data.role);\n      localStorage.setItem(\"id\", res.data.id);\n      localStorage.setItem(\"name\", res.data.name); //const a = localStorage.getItem(\"role\");\n\n      console.log(res.data.id);\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 16\n        }\n      });\n    }).catch(error => {\n      console.log(error.msg);\n      toast.error(\"user not exists or username and password incorrect\"); // alert(error.errors);\n    });\n    setFormErrors(validate(formValues));\n    setIsSubmitting(true); // this.setState({ email: \"\", password: \"\" });\n  }; //form validation handler\n\n\n  const validate = values => {\n    let errors = {};\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n\n    if (!values.email) {\n      errors.email = \"Cannot be blank\";\n    } else if (!regex.test(values.email)) {\n      errors.email = \"Invalid email format\";\n    }\n\n    if (!values.password) {\n      errors.password = \"Cannot be blank\";\n    } else if (values.password.length < 4) {\n      errors.password = \"Password must be more than 4 characters\";\n    }\n\n    return errors;\n  };\n\n  useEffect(() => {\n    if (Object.keys(formErrors).length === 0 && isSubmitting) {\n      submit();\n    }\n  }, [formErrors]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"Sign in to continue\"), Object.keys(formErrors).length === 0 && isSubmitting && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"success-msg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Form submitted successfully\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    value: formValues.email,\n    onChange: handleChange,\n    className: formErrors.email && \"input-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }), formErrors.email && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, formErrors.email)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    value: formValues.password,\n    onChange: handleChange,\n    className: formErrors.password && \"input-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }), formErrors.password && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, formErrors.password)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, \"Sign In\"))));\n};\n\nexport default Login;\n/*\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {\n        email: \"\",\n        password: \"\",\n      },\n    };\n  }\n\n  onChangeEmail(e) {\n    let value = e.target.value;\n    let errors = this.state.errors;\n    errors.email = value.length < 3 ? \"email must contain 3 character\" : \"\";\n    let apos = value.indexOf(\"@\");\n    let dotpos = value.lastIndexOf(\".\");\n    if (apos < 1 || dotpos - apos < 2) {\n      errors.email = \"please enter a valid email id\";\n    }\n    this.setState({ email: e.target.value });\n  }\n\n  onChangePassword(e) {\n    let value = e.target.value;\n    let errors = this.state.errors;\n    errors.password =\n      value.length < 6 ? \"password must contain atleast  6 character\" : \"\";\n    this.setState({ password: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const userObject = {\n      email: this.state.email,\n      password: this.state.password,\n    };\n\n    axios\n      .post(\"/api/auth\", userObject)\n      .then((res) => {\n        //console.log(res.data.id);\n        localStorage.setItem(\"login\", JSON.stringify(res));\n        localStorage.setItem(\"role\", res.data.role);\n        localStorage.setItem(\"id\", res.data.id);\n        localStorage.setItem(\"name\", res.data.name);\n\n        //const a = localStorage.getItem(\"role\");\n        console.log(res.data.id);\n        return this.props.history.push(\"/\");\n      })\n      .catch((error) => {\n        console.log(error.msg);\n        toast.error(\"user not exists or username and password incorrect\");\n        // alert(error.errors);\n      });\n\n    this.setState({ email: \"\", password: \"\" });\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <NavBar />\n        <div className=\"wrapper m-5 \">\n          <form onSubmit={this.onSubmit}>\n            <div className=\"form-group m-3\">\n              <label forhtml=\"email\">Email</label>\n              <input\n                autoFocus\n                autoComplete\n                required\n                type=\"text\"\n                id=\"email\"\n                placeholder=\"Email\"\n                value={this.state.email}\n                onChange={this.onChangeEmail}\n                className=\"form-control\"\n              />\n              <p>\n                <span style={{ color: \"Pink\" }}>{errors.email}</span>\n              </p>\n            </div>\n            <div className=\"form-group m-3 \">\n              <label forhtml=\"password\">Password</label>\n              <input\n                autoFocus\n                autoComplete\n                required\n                type=\"password\"\n                id=\"password\"\n                placeholder=\"Password\"\n                value={this.state.password}\n                onChange={this.onChangePassword}\n                className=\"form-control\"\n              />\n              <p>\n                <span style={{ color: \"Pink\" }}>{errors.password}</span>\n              </p>\n            </div>\n            <div className=\"form-group m-3\">\n              <input type=\"submit\" value=\"Login\" className=\"btn btn-success\" />\n            </div>\n            <div>\n              <Link to=\"/forget-password\">Forget Password</Link>\n              <hr /> New_User ?<Link to=\"/register\">Register</Link>\n            </div>\n          </form>\n        </div>\n      </React.Fragment>\n    );\n  }\n}*/","map":{"version":3,"sources":["/home/rudra/Documents/backendforget/frontend/src/components/Login.js"],"names":["axios","NavBar","Link","Redirect","json","ToastContainer","toast","React","useState","useEffect","Fragment","useHistory","Login","intialValues","email","password","formValues","setFormValues","formErrors","setFormErrors","isSubmitting","setIsSubmitting","submit","console","log","handleChange","e","name","value","target","handleSubmit","preventDefault","post","then","res","localStorage","setItem","JSON","stringify","data","role","id","catch","error","msg","validate","values","errors","regex","test","length","Object","keys"],"mappings":";AAAA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;AAEA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,EAA+CC,UAA/C,QAAiE,OAAjE;AAEA,OAAO,aAAP;;AACA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAMC,YAAY,GAAG;AAAEC,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GAArB;AAEA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAACK,YAAD,CAA5C;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,KAAD,CAAhD,CALkB,CAMlB;;AACA,QAAMc,MAAM,GAAG,MAAM;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAYR,UAAZ;AACD,GAFD,CAPkB,CAWlB;;;AACA,QAAMS,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAZ,IAAAA,aAAa,CAAC,EAAE,GAAGD,UAAL;AAAiB,OAACW,IAAD,GAAQC;AAAzB,KAAD,CAAb;AACD,GAHD,CAZkB,CAiBlB;;;AACA,QAAME,YAAY,GAAIJ,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACK,cAAF;AAEA/B,IAAAA,KAAK,CACFgC,IADH,CACQ,WADR,EACqBhB,UADrB,EAEGiB,IAFH,CAESC,GAAD,IAAS;AACb;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeJ,GAAf,CAA9B;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BF,GAAG,CAACK,IAAJ,CAASC,IAAtC;AACAL,MAAAA,YAAY,CAACC,OAAb,CAAqB,IAArB,EAA2BF,GAAG,CAACK,IAAJ,CAASE,EAApC;AACAN,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BF,GAAG,CAACK,IAAJ,CAASZ,IAAtC,EALa,CAOb;;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYU,GAAG,CAACK,IAAJ,CAASE,EAArB;AACA,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAZH,EAaGC,KAbH,CAaUC,KAAD,IAAW;AAChBpB,MAAAA,OAAO,CAACC,GAAR,CAAYmB,KAAK,CAACC,GAAlB;AACAtC,MAAAA,KAAK,CAACqC,KAAN,CAAY,oDAAZ,EAFgB,CAGhB;AACD,KAjBH;AAmBAxB,IAAAA,aAAa,CAAC0B,QAAQ,CAAC7B,UAAD,CAAT,CAAb;AACAK,IAAAA,eAAe,CAAC,IAAD,CAAf,CAvB0B,CAwB1B;AACD,GAzBD,CAlBkB,CA6ClB;;;AACA,QAAMwB,QAAQ,GAAIC,MAAD,IAAY;AAC3B,QAAIC,MAAM,GAAG,EAAb;AACA,UAAMC,KAAK,GAAG,gCAAd;;AAEA,QAAI,CAACF,MAAM,CAAChC,KAAZ,EAAmB;AACjBiC,MAAAA,MAAM,CAACjC,KAAP,GAAe,iBAAf;AACD,KAFD,MAEO,IAAI,CAACkC,KAAK,CAACC,IAAN,CAAWH,MAAM,CAAChC,KAAlB,CAAL,EAA+B;AACpCiC,MAAAA,MAAM,CAACjC,KAAP,GAAe,sBAAf;AACD;;AAED,QAAI,CAACgC,MAAM,CAAC/B,QAAZ,EAAsB;AACpBgC,MAAAA,MAAM,CAAChC,QAAP,GAAkB,iBAAlB;AACD,KAFD,MAEO,IAAI+B,MAAM,CAAC/B,QAAP,CAAgBmC,MAAhB,GAAyB,CAA7B,EAAgC;AACrCH,MAAAA,MAAM,CAAChC,QAAP,GAAkB,yCAAlB;AACD;;AAED,WAAOgC,MAAP;AACD,GAjBD;;AAmBAtC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI0C,MAAM,CAACC,IAAP,CAAYlC,UAAZ,EAAwBgC,MAAxB,KAAmC,CAAnC,IAAwC9B,YAA5C,EAA0D;AACxDE,MAAAA,MAAM;AACP;AACF,GAJQ,EAIN,CAACJ,UAAD,CAJM,CAAT;AAMA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEGiC,MAAM,CAACC,IAAP,CAAYlC,UAAZ,EAAwBgC,MAAxB,KAAmC,CAAnC,IAAwC9B,YAAxC,iBACC;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAHJ,eAKE;AAAM,IAAA,QAAQ,EAAEU,YAAhB;AAA8B,IAAA,UAAU,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,EAAE,EAAC,OAHL;AAIE,IAAA,KAAK,EAAEd,UAAU,CAACF,KAJpB;AAKE,IAAA,QAAQ,EAAEW,YALZ;AAME,IAAA,SAAS,EAAEP,UAAU,CAACJ,KAAX,IAAoB,aANjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAUGI,UAAU,CAACJ,KAAX,iBACC;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBI,UAAU,CAACJ,KAApC,CAXJ,CADF,eAgBE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,EAAE,EAAC,UAHL;AAIE,IAAA,KAAK,EAAEE,UAAU,CAACD,QAJpB;AAKE,IAAA,QAAQ,EAAEU,YALZ;AAME,IAAA,SAAS,EAAEP,UAAU,CAACH,QAAX,IAAuB,aANpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAUGG,UAAU,CAACH,QAAX,iBACC;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBG,UAAU,CAACH,QAApC,CAXJ,CAhBF,eA+BE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA/BF,CALF,CAFF,CADF;AA4CD,CAnHD;;AAqHA,eAAeH,KAAf;AAEA","sourcesContent":["// ** create-user.component.js ** //\n\n//import React from \"react\";\nimport axios from \"axios\";\nimport NavBar from \"./NavBar\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { json } from \"body-parser\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport React, { useState, useEffect, Fragment, useHistory } from \"react\";\n\nimport \"./Form.scss\";\nconst Login = () => {\n  const intialValues = { email: \"\", password: \"\" };\n\n  const [formValues, setFormValues] = useState(intialValues);\n  const [formErrors, setFormErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  // let history = useHistory();\n  const submit = () => {\n    console.log(formValues);\n  };\n\n  //input change handler\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormValues({ ...formValues, [name]: value });\n  };\n\n  //form submission handler\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    axios\n      .post(\"/api/auth\", formValues)\n      .then((res) => {\n        //console.log(res.data.id);\n        localStorage.setItem(\"login\", JSON.stringify(res));\n        localStorage.setItem(\"role\", res.data.role);\n        localStorage.setItem(\"id\", res.data.id);\n        localStorage.setItem(\"name\", res.data.name);\n\n        //const a = localStorage.getItem(\"role\");\n        console.log(res.data.id);\n        return <Redirect to=\"/\" />;\n      })\n      .catch((error) => {\n        console.log(error.msg);\n        toast.error(\"user not exists or username and password incorrect\");\n        // alert(error.errors);\n      });\n\n    setFormErrors(validate(formValues));\n    setIsSubmitting(true);\n    // this.setState({ email: \"\", password: \"\" });\n  };\n\n  //form validation handler\n  const validate = (values) => {\n    let errors = {};\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n\n    if (!values.email) {\n      errors.email = \"Cannot be blank\";\n    } else if (!regex.test(values.email)) {\n      errors.email = \"Invalid email format\";\n    }\n\n    if (!values.password) {\n      errors.password = \"Cannot be blank\";\n    } else if (values.password.length < 4) {\n      errors.password = \"Password must be more than 4 characters\";\n    }\n\n    return errors;\n  };\n\n  useEffect(() => {\n    if (Object.keys(formErrors).length === 0 && isSubmitting) {\n      submit();\n    }\n  }, [formErrors]);\n\n  return (\n    <Fragment>\n      <NavBar />\n      <div className=\"container\">\n        <h1>Sign in to continue</h1>\n        {Object.keys(formErrors).length === 0 && isSubmitting && (\n          <span className=\"success-msg\">Form submitted successfully</span>\n        )}\n        <form onSubmit={handleSubmit} noValidate>\n          <div className=\"form-row\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              value={formValues.email}\n              onChange={handleChange}\n              className={formErrors.email && \"input-error\"}\n            />\n            {formErrors.email && (\n              <span className=\"error\">{formErrors.email}</span>\n            )}\n          </div>\n\n          <div className=\"form-row\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              value={formValues.password}\n              onChange={handleChange}\n              className={formErrors.password && \"input-error\"}\n            />\n            {formErrors.password && (\n              <span className=\"error\">{formErrors.password}</span>\n            )}\n          </div>\n\n          <button type=\"submit\">Sign In</button>\n        </form>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Login;\n\n/*\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {\n        email: \"\",\n        password: \"\",\n      },\n    };\n  }\n\n  onChangeEmail(e) {\n    let value = e.target.value;\n    let errors = this.state.errors;\n    errors.email = value.length < 3 ? \"email must contain 3 character\" : \"\";\n    let apos = value.indexOf(\"@\");\n    let dotpos = value.lastIndexOf(\".\");\n    if (apos < 1 || dotpos - apos < 2) {\n      errors.email = \"please enter a valid email id\";\n    }\n    this.setState({ email: e.target.value });\n  }\n\n  onChangePassword(e) {\n    let value = e.target.value;\n    let errors = this.state.errors;\n    errors.password =\n      value.length < 6 ? \"password must contain atleast  6 character\" : \"\";\n    this.setState({ password: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const userObject = {\n      email: this.state.email,\n      password: this.state.password,\n    };\n\n    axios\n      .post(\"/api/auth\", userObject)\n      .then((res) => {\n        //console.log(res.data.id);\n        localStorage.setItem(\"login\", JSON.stringify(res));\n        localStorage.setItem(\"role\", res.data.role);\n        localStorage.setItem(\"id\", res.data.id);\n        localStorage.setItem(\"name\", res.data.name);\n\n        //const a = localStorage.getItem(\"role\");\n        console.log(res.data.id);\n        return this.props.history.push(\"/\");\n      })\n      .catch((error) => {\n        console.log(error.msg);\n        toast.error(\"user not exists or username and password incorrect\");\n        // alert(error.errors);\n      });\n\n    this.setState({ email: \"\", password: \"\" });\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <NavBar />\n        <div className=\"wrapper m-5 \">\n          <form onSubmit={this.onSubmit}>\n            <div className=\"form-group m-3\">\n              <label forhtml=\"email\">Email</label>\n              <input\n                autoFocus\n                autoComplete\n                required\n                type=\"text\"\n                id=\"email\"\n                placeholder=\"Email\"\n                value={this.state.email}\n                onChange={this.onChangeEmail}\n                className=\"form-control\"\n              />\n              <p>\n                <span style={{ color: \"Pink\" }}>{errors.email}</span>\n              </p>\n            </div>\n            <div className=\"form-group m-3 \">\n              <label forhtml=\"password\">Password</label>\n              <input\n                autoFocus\n                autoComplete\n                required\n                type=\"password\"\n                id=\"password\"\n                placeholder=\"Password\"\n                value={this.state.password}\n                onChange={this.onChangePassword}\n                className=\"form-control\"\n              />\n              <p>\n                <span style={{ color: \"Pink\" }}>{errors.password}</span>\n              </p>\n            </div>\n            <div className=\"form-group m-3\">\n              <input type=\"submit\" value=\"Login\" className=\"btn btn-success\" />\n            </div>\n            <div>\n              <Link to=\"/forget-password\">Forget Password</Link>\n              <hr /> New_User ?<Link to=\"/register\">Register</Link>\n            </div>\n          </form>\n        </div>\n      </React.Fragment>\n    );\n  }\n}*/\n"]},"metadata":{},"sourceType":"module"}